To implement a contact form that sends data to an API, we'll:

Create a contact form with fields like name, email, and message.
Use JavaScript to submit the form data using a fetch() request to an API.
Handle Success and Error Responses: Show success or error messages based on the API's response.

Explanation:

HTML Structure:
The form contains three fields:
Name: Text input for the user's name.
Email: Email input for the user's email.
Message: Textarea for the user's message.
A submit button is provided to send the form data.
A status message (<div id="status-message">) is used to display the success or error message after the form submission.

CSS Styling:
The form is styled for a clean and simple appearance.
The status-message is styled to show success messages in green and error messages in red.

JavaScript Logic:
Form Submission: The form is submitted using an asynchronous fetch() call to a mock API (https://jsonplaceholder.typicode.com/posts). You can replace this URL with your actual API endpoint.
Form Data: The form data (name, email, message) is captured and sent as JSON to the API.
Response Handling:
If the request is successful (response.ok), a success message is displayed, and the form is reset.
If thereâ€™s an error during the request (network issues or server-side errors), an error message is shown.

Mock API:
In this example, we are using https://jsonplaceholder.typicode.com/posts, which is a fake API provided by JSONPlaceholder that simulates a POST request and returns a success response.
Replace this URL with your actual API endpoint.
Status Messages:
Upon successful form submission, a success message ("Message sent successfully!") is shown.
If there's an error, an error message ("Error: Could not send message. Please try again later.") is displayed.
How It Works:
Filling Out the Form: The user enters their name, email, and message into the form fields.
Submitting the Form: When the user clicks the "Send" button, the form data is collected and sent to the API using a POST request.
Handling the Response: Based on the API response:
If successful, the form is reset, and a success message is displayed.
If the request fails, an error message is shown.
